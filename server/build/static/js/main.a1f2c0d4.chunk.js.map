{"version":3,"sources":["queries/index.js","components/BookDetails.js","components/BookLists.js","components/AddBook.js","theme/index.js","components/Navbar.js","components/Layout.js","App.js","serviceWorker.js","index.js"],"names":["GET_AUTHORS","gql","GET_BOOKS","GET_BOOK","ADD_BOOK","useStyles","makeStyles","theme","root","flexGrow","padding","spacing","backgroundColor","palette","background","paper","BookDetails","bookId","classes","useQuery","variables","id","loading","error","data","className","Typography","component","variant","book","name","genre","author","books","map","key","flex","width","display","breakpoints","down","flexDirection","list","BookLists","useState","selected","setSelected","List","ListItem","ListItemText","primary","onClick","handleSelected","button","textField","marginBottom","INIT_STATE","authorId","AddBook","state","setState","useMutation","addBook","handleChange","e","persist","prevState","target","value","Paper","onSubmit","preventDefault","refetchQueries","query","TextField","label","onChange","multiline","fullWidth","InputProps","FormControl","InputLabel","Select","labelId","MenuItem","authors","age","Fab","color","aria-label","type","disabled","themeConfig","typography","useNextVariants","suppressDeprecationWarnings","fontFamily","join","light","main","dark","contrastText","secondary","success","contrastThreshold","tonalOffset","menuButton","marginRight","title","Navbar","onToggle","useTheme","AppBar","position","Toolbar","IconButton","edge","Layout","children","client","ApolloClient","uri","useDarkMode","setTheme","updatedTheme","App","toggleDarkMode","createMuiTheme","CssBaseline","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a1f2c0d4.chunk.js","sourcesContent":["import { gql } from \"apollo-boost\";\n\nexport const GET_AUTHORS = gql`\n  {\n    authors {\n      name\n      age\n      id\n    }\n  }\n`;\n\nexport const GET_BOOKS = gql`\n  {\n    books {\n      id\n      name\n    }\n  }\n`;\n\nexport const GET_BOOK = gql`\n  query GetBook($id: ID!) {\n    book(id: $id) {\n      name\n      id\n      genre\n      author {\n        id\n        name\n        age\n        books {\n          name\n          id\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_BOOK = gql`\n  mutation AddBook($name: String!, $genre: String!, $authorId: ID!) {\n    addBook(name: $name, genre: $genre, authorId: $authorId) {\n      name\n      id\n    }\n  }\n`;\n","import React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { Typography } from \"@material-ui/core\";\nimport { GET_BOOK } from \"../queries\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    padding: theme.spacing(8),\n    backgroundColor: theme.palette.background.paper\n  }\n}));\n\nexport default function BookDetails({ bookId }) {\n  const classes = useStyles();\n  const { loading, error, data } = useQuery(GET_BOOK, {\n    variables: { id: bookId }\n  });\n\n  return (\n    <div className={classes.root}>\n      <Typography component=\"p\" variant=\"subtitle1\">\n        Book details goes here\n      </Typography>\n      {loading ? (\n        <p>Loading...</p>\n      ) : error ? (\n        <h2>No Selected Book</h2>\n      ) : (\n        <div>\n          <h2>{data.book.name}</h2>\n          <p>{data.book.genre}</p>\n          <p>All books by this author</p>\n          <ul>\n            {data.book.author.books.map(book => (\n              <li key={book.id}>{book.name}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { GET_BOOKS } from \"../queries\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport BookDetails from \"./BookDetails\";\nimport { Typography, List, ListItem, ListItemText } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(8),\n\n    flexGrow: 1\n  },\n  flex: {\n    width: \"100%\",\n    display: \"flex\",\n    [theme.breakpoints.down(\"sm\")]: {\n      flexDirection: \"column\"\n    }\n  },\n  list: {\n    backgroundColor: theme.palette.background.paper\n  }\n}));\n\nexport default function BookLists() {\n  const classes = useStyles();\n  const { loading, error, data } = useQuery(GET_BOOKS);\n\n  const [selected, setSelected] = useState(null);\n\n  if (error) {\n    return <p>Failed to fetch data</p>;\n  }\n\n  const handleSelected = id => {\n    setSelected(id);\n  };\n\n  return (\n    <div className={classes.flex}>\n      <div className={classes.root}>\n        <Typography variant=\"subtitle1\" component=\"p\">\n          Ninja's reading list\n        </Typography>\n        <List className={classes.list}>\n          {loading ? (\n            <ListItem>\n              <ListItemText primary=\"Loading...\" />\n            </ListItem>\n          ) : (\n            data.books.map(({ id, name }) => (\n              <ListItem key={id} onClick={() => handleSelected(id)} button>\n                <ListItemText primary={name} />\n              </ListItem>\n            ))\n          )}\n        </List>\n      </div>\n      <BookDetails bookId={selected} />\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport {\n  Paper,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nimport { GET_AUTHORS, ADD_BOOK, GET_BOOKS } from \"../queries\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(8)\n  },\n  textField: {\n    marginBottom: theme.spacing(4)\n  }\n}));\n\nconst INIT_STATE = {\n  name: \"\",\n  genre: \"\",\n  authorId: \"\"\n};\n\nexport default function AddBook() {\n  const classes = useStyles();\n  const [state, setState] = useState(INIT_STATE);\n  const { loading, error, data } = useQuery(GET_AUTHORS);\n  const [addBook] = useMutation(ADD_BOOK);\n  if (error) return <p>Error...</p>;\n\n  const handleChange = e => {\n    e.persist();\n    setState(prevState => ({ ...prevState, [e.target.name]: e.target.value }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    addBook({\n      variables: {\n        name: state.name,\n        genre: state.genre,\n        authorId: state.authorId\n      },\n      refetchQueries: [{ query: GET_BOOKS }]\n    });\n    setState(INIT_STATE);\n  };\n\n  return (\n    <Paper component=\"form\" className={classes.root} onSubmit={handleSubmit}>\n      <TextField\n        label=\"Name\"\n        value={state.name}\n        onChange={handleChange}\n        variant=\"outlined\"\n        multiline\n        fullWidth\n        className={classes.textField}\n        InputProps={{\n          name: \"name\"\n        }}\n      />\n      <TextField\n        label=\"Genre\"\n        value={state.genre}\n        onChange={handleChange}\n        variant=\"outlined\"\n        multiline\n        fullWidth\n        className={classes.textField}\n        InputProps={{\n          name: \"genre\"\n        }}\n      />\n\n      <FormControl variant=\"outlined\" className={classes.textField} fullWidth>\n        <InputLabel id=\"author\">Author</InputLabel>\n        <Select\n          labelId=\"author\"\n          id=\"author\"\n          name=\"authorId\"\n          value={state.authorId}\n          onChange={handleChange}\n        >\n          <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n          {loading ? (\n            <MenuItem>Loading...</MenuItem>\n          ) : (\n            data.authors.map(({ name, age, id }) => (\n              <MenuItem key={id} value={id}>\n                {name}\n              </MenuItem>\n            ))\n          )}\n        </Select>\n      </FormControl>\n      <Fab\n        color=\"primary\"\n        aria-label=\"add\"\n        type=\"submit\"\n        disabled={!(state.name && state.genre && state.authorId)}\n      >\n        <AddIcon />\n      </Fab>\n    </Paper>\n  );\n}\n","const themeConfig = {\n  typography: {\n    useNextVariants: true,\n    suppressDeprecationWarnings: true,\n    fontFamily: [\n      \"Quicksand\",\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"'\n    ].join(\",\")\n  },\n  palette: {\n    type: \"light\",\n    primary: {\n      light: \"#4791db\",\n      main: \"#1976d2\",\n      dark: \"#115293\",\n      contrastText: \"#fefefe\"\n\n      // contrastText: will be calculated to contrast with palette.primary.main\n    },\n    secondary: {\n      light: \"#e33371\",\n\n      main: \"#dc004e\",\n      dark: \"#9a0036\"\n    },\n    success: {\n      light: \"#81c784\",\n      main: \"#4caf50\",\n      dark: \"#388e3c\"\n    },\n    // Used by `getContrastText()` to maximize the contrast between\n    // the background and the text.\n    contrastThreshold: 3,\n    // Used by the functions below to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset: 0.2\n  }\n};\n\nexport default themeConfig;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Brightness7Icon from \"@material-ui/icons/Brightness7\";\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\nimport { useTheme } from \"@material-ui/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  }\n}));\n\nexport default function Navbar({ onToggle }) {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return (\n    <div className={classes.root}>\n      <AppBar\n        position=\"static\"\n        color={theme.palette.type === \"light\" ? \"primary\" : \"inherit\"}\n      >\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={onToggle}\n          >\n            {theme.palette.type === \"light\" ? (\n              <Brightness7Icon />\n            ) : (\n              <Brightness4Icon />\n            )}\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Ninja's List\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Navbar from \"./Navbar\";\n\nexport default function Layout({ children, onToggle }) {\n  return (\n    <>\n      <Navbar onToggle={onToggle} />\n      {children}\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\n\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport BookLists from \"./components/BookLists\";\nimport AddBook from \"./components/AddBook\";\nimport themeConfig from \"./theme\";\nimport Layout from \"./components/Layout\";\n\nconst client = new ApolloClient({\n  uri: \"/graphql\"\n});\n\nconst useDarkMode = () => {\n  const [theme, setTheme] = useState(themeConfig);\n\n  const {\n    palette: { type }\n  } = theme;\n\n  const toggleDarkMode = () => {\n    const updatedTheme = {\n      ...theme,\n      palette: {\n        ...theme.palette,\n        type: type === \"light\" ? \"dark\" : \"light\"\n      }\n    };\n    setTheme(updatedTheme);\n  };\n\n  return [theme, toggleDarkMode];\n};\n\nfunction App() {\n  const [theme, toggleDarkMode] = useDarkMode();\n  const themeConfig = createMuiTheme(theme);\n\n  return (\n    <ApolloProvider client={client}>\n      <MuiThemeProvider theme={themeConfig}>\n        <CssBaseline />\n        <Layout onToggle={toggleDarkMode}>\n          <div>\n            <BookLists />\n            <AddBook />\n          </div>\n        </Layout>\n      </MuiThemeProvider>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}